package jp.archaique.transition
{
	import flash.display.DisplayObject;
	import flash.events.EventDispatcher;
	
	import jp.archaique.event.ViewEvent;

	public class AbstractTransition extends EventDispatcher implements ITransition
	{
		protected var _target:DisplayObject;
		protected var _duration:Number;
		protected var _delay:Number;
		
		protected var _id:String;
		protected var _easing:Function;
		protected var _state:String=TransitionState.WAITING;
		protected var _easeParams:Array;
		protected var _onShowComplete:Function;
		protected var _onShowCompleteParams:Array;
		protected var _onHideComplete:Function;
		protected var _onHideCompleteParams:Array;
		
		public function AbstractTransition( target:DisplayObject, id:String=null, duration:Number=0.5, delay:Number=0, easing:Function=null, easeParams:Array=null)
		{
			_target = target;
			_id=id;
			_duration=duration;
			_delay=delay;	
			_easing=easing;
			_easeParams=easeParams;
		}
		
		public function show():void
		{
			_state=TransitionState.SHOWING;
			dispatchEvent(new ViewEvent(ViewEvent.SHOW));
		}
		
		public function hide():void
		{
			_state=TransitionState.HIDING;
			dispatchEvent(new ViewEvent(ViewEvent.HIDE));
		}
		
		public function kill():void
		{
			_target=null;
			_duration=NaN;
			_delay=NaN;
			_easing=null;
			_id="";
			_state=TransitionState.KILLED;
			_easeParams=null;
			_onShowComplete=null;
			_onShowCompleteParams=null;
			_onHideComplete=null;
			_onHideCompleteParams=null;
		}
		
		public function get target():DisplayObject
		{
			return _target;
		}
		
		public function get duration():Number
		{
			return _duration;
		}
		
		public function get delay():Number
		{
			return _delay;
		}
		
		
		public function get id():String
		{
			return _id;
		}
		
		public function get easing():Function
		{
			return _easing;
		}
		
		public function get easeParams():Array
		{
			return _easeParams;
		}
		
		public function get state():String
		{
			return _state;
		}
		
		public function get onShowComplete():Function
		{
			return _onShowComplete;
		}
		
		public function get onShowCompleteParams():Array
		{
			return _onShowCompleteParams;
		}
		
		public function get onHideComplete():Function
		{
			return _onHideComplete;
		}
		
		public function get onHideCompleteParams():Array
		{
			return _onHideCompleteParams;
		}
		
		
		public function set target(value:DisplayObject):void
		{
			this._target=value;
		}
		
		public function set duration(value:Number):void
		{
			this._duration=value;
		}
		
		public function set delay(value:Number):void
		{
			this._delay=value;
		}
		
		
		public function set id(value:String):void
		{
			this._id=value;
		}
		
		public function set easing(value:Function):void
		{
			this._easing=value;
		}
		
		public function set easeParams(value:Array):void
		{
			 _easeParams=value;
		}
		
		public function set onShowComplete(value:Function):void
		{
			_onShowComplete=value;
		}
		
		public function set onShowCompleteParams(value:Array):void
		{
			_onShowCompleteParams=value;
		}
		
		public function set onHideComplete(value:Function):void
		{
			_onHideComplete=value;
		}
		
		public function set onHideCompleteParams(value:Array):void
		{
			_onHideCompleteParams=value;
		}
		
		protected function showed():void
		{
			_state=TransitionState.WAITING;
			if(_onShowComplete!=null)
				_onShowComplete.apply(null, onShowCompleteParams);
			dispatchEvent(new ViewEvent(ViewEvent.SHOWED));
		}
		
		protected function hid():void
		{
			_state=TransitionState.WAITING;
			if(_onHideComplete!=null)
				_onHideComplete.apply(null, onHideCompleteParams);
			dispatchEvent(new ViewEvent(ViewEvent.HID));
		}
		
	}
}