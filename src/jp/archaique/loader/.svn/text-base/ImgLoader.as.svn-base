package jp.archaique.loader{		import flash.display.DisplayObject;	import flash.display.Loader;	import flash.display.LoaderInfo;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	import flash.system.LoaderContext;		public class ImgLoader extends EventDispatcher implements ILoader	{				private var _loader:Loader;		private var _img:DisplayObject;		private var _loaderInfo:LoaderInfo;				private var _request:URLRequest;		private var _context:LoaderContext;				public function ImgLoader(_request:URLRequest=null)		{			this._request=_request;				_loader = new Loader();			_loaderInfo=_loader.contentLoaderInfo;		}				//------------------------------------------------------		//	getter		//-------------------------------------------------------				public function get request():URLRequest		{			return _request;		}				public function get context():LoaderContext		{			return _context;		}				public function get img():DisplayObject		{			return _img;		}						public function get loader():Loader		{			return _loader;		}				public function get loaderInfo():LoaderInfo		{			return _loaderInfo;		}						//------------------------------------------------------		//	setter		//-------------------------------------------------------				public function set request(value:URLRequest):void		{			_request=value;		}				public function set context(value:LoaderContext):void		{			_context=value;		}				//------------------------------------------------------		//	public 		//-------------------------------------------------------				public function load():void		{			_loader.contentLoaderInfo.addEventListener(Event.INIT,onLoadInit);			_loader.contentLoaderInfo.addEventListener(Event.COMPLETE,onLoadComplete);			_loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS,onLoadProgress);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,onLoadError);			_loader.load(_request, _context);		}				public function close():void		{			if(_loader)				_loader.close();		}				public function unLoad():void		{			if(_loader)				_loader.unload();		}				public function kill():void		{				_loader.contentLoaderInfo.removeEventListener(Event.INIT,onLoadInit);			_loader.contentLoaderInfo.removeEventListener(Event.COMPLETE,onLoadComplete);			_loader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS,onLoadProgress);			_loader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR,onLoadError);						_request=null;			_context=null;			_img=null;			_loaderInfo=null;			_loader=null;		}								//------------------------------------------------------		//	private		//-------------------------------------------------------				private function onLoadInit(event:Event):void		{			_img=_loader.content;			dispatchEvent(event);		}						private function onLoadComplete(event:Event):void		{			if (!_img)				_img=_loader.content;						dispatchEvent(event);		}						private function onLoadProgress(event:ProgressEvent):void		{				dispatchEvent(event);		}				private function onLoadError(event:IOErrorEvent):void		{			_loader.close();			_loader.unload();			dispatchEvent(event);		}	}			}